"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[7675],{4746:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"dev/wiki","title":"Wiki Guidelines","description":"First of all, thank you for your efforts to make this wiki better. Seriously, with a lot of blocks and items it is near to impossible for developers to keep wiki up-to-date.","source":"@site/docs/dev/wiki.mdx","sourceDirName":"dev","slug":"/dev/wiki","permalink":"/docs/dev/wiki","draft":false,"unlisted":false,"editUrl":"https://github.com/TechReborn/Wiki/tree/main/docs/dev/wiki.mdx","tags":[],"version":"current","frontMatter":{"title":"Wiki Guidelines"},"sidebar":"devSidebar","previous":{"title":"LibCD support","permalink":"/docs/dev/libcd"}}');var r=i(4848),s=i(8453);const o={title:"Wiki Guidelines"},l=void 0,a={},c=[{value:"Wiki Structure",id:"wiki-structure",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Page Structure",id:"page-structure",level:2},{value:"Custom Components",id:"custom-components",level:2},{value:"McItem",id:"mcitem",level:3},{value:"CraftingTable",id:"craftingtable",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{ItemImage:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ItemImage",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"First of all, thank you for your efforts to make this wiki better. Seriously, with a lot of blocks and items it is near to impossible for developers to keep wiki up-to-date."}),"\n",(0,r.jsx)(n.h2,{id:"wiki-structure",children:"Wiki Structure"}),"\n",(0,r.jsx)(n.p,{children:"Wiki content split into several sections:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Items"})," - Tech Reborn items. Including cells, dusts, ingots, parts, etc."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Blocks"})," - Tech Reborn blocks. Including machine frames/casings, storage/tank units, etc."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"World"})," - World Generation related things, like ores, trees, NPCs."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsxs)(n.p,{children:["This wiki with ",(0,r.jsx)(n.strong,{children:"Docusaurus"})," and use ",(0,r.jsx)(n.a,{href:"https://www.markdownguide.org/basic-syntax/",children:"Markdown syntax"})," for pages. There is a comprehensive ",(0,r.jsx)(n.a,{href:"https://docusaurus.io/docs/markdown-features",children:"documentation"})," on possible formatting options."]}),"\n",(0,r.jsx)(n.h2,{id:"page-structure",children:"Page Structure"}),"\n",(0,r.jsx)(n.p,{children:"Pages should start with Front Matter."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"---\ntitle: <Some page Title. It will become H1 tag on the page and also will be used in SideBar>\nsidebar_position: <Some number, including float. Optional. Could be used to better sort pages in SideBar\n---\n"})}),"\n",(0,r.jsxs)(n.p,{children:["More fields for Front Matter documented ",(0,r.jsx)(n.a,{href:"https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-docs#markdown-front-matter",children:"here"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Most of pages have big righ-aligned item image just below page title. We have custom component for that image"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'<ItemImage \n    file="<file name without extension for a file in /static/img/techreborn folder>" \n    alt="<Alt text for image>" \n    size="<Size in pixels for image.>" />\n'})}),"\n",(0,r.jsx)(n.p,{children:"Here is an example of ItemImage."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'<ItemImage file="rubber_sapling" alt="Rubber Sapling" size="200" />\n'})}),"\n",(0,r.jsx)(n.p,{children:"will be shown as:"}),"\n",(0,r.jsx)(i,{file:"rubber_sapling",alt:"Rubber Sapling",size:"200"}),"\n",(0,r.jsx)("div",{style:{clear:"both"}}),"\n",(0,r.jsx)(n.p,{children:"Please, use headings to structure page content. Table of Content for a page will be generated automatically based on heading."}),"\n",(0,r.jsx)(n.h2,{id:"custom-components",children:"Custom Components"}),"\n",(0,r.jsx)(n.p,{children:"Here's a list of custom components and how to use them."}),"\n",(0,r.jsx)(n.h3,{id:"mcitem",children:"McItem"}),"\n",(0,r.jsx)(n.p,{children:"The base of most item references. If you want to refer to an item in your page, you should probably be using this tag. It brings in an image and automatically does some other nice things too (hopefully)."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'<McItem slug="aluminium_ingot" pack="techreborn"/> \n'})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"slug"})," is the name of the file in ",(0,r.jsx)(n.code,{children:"/static/imgs/techreborn/"})," without the file extension. We also use the slug to find the correct page in the index and to render the friendly name of the item. Slug can also be the old format of pack",":slug"," instead of passing the pack on its own.\nThe ",(0,r.jsx)(n.code,{children:"pack"})," is the content pack that this item originates from. Supported packs at the moment are:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"minecraft"}),": for the base game"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"techreborn"}),": for this modpack"]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Tip!"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"If you use VSCode, you can use find and replace with regex and simplify this inside of a file:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Find: ",(0,r.jsx)(n.code,{children:"\\\\<mcitem\\\\>(.*?)\\\\<\\/mcitem\\\\>"})]}),"\n",(0,r.jsxs)(n.li,{children:["Replace: ",(0,r.jsx)(n.code,{children:'<McItem slug="$1"/>'})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"craftingtable",children:"CraftingTable"}),"\n",(0,r.jsx)(n.p,{children:"This is largely meant to take recipes from the previous generation of wiki and display them in a somewhat nice interface."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'<CraftingTable recipe="input techreborn:aluminium_nugget techreborn:aluminium_nugget techreborn:aluminium_nugget input techreborn:aluminium_nugget techreborn:aluminium_nugget techreborn:aluminium_nugget input techreborn:aluminium_nugget techreborn:aluminium_nugget techreborn:aluminium_nugget output techreborn:aluminium_ingot" />\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"recipe"})," is meant to be a drop in replacement for the previous version of the wiki, but this doesn't mean you can't handwrite a recipe. I'm showing a broken down example below, but when you do it for real, use spaces between your items, not newlines."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"input\nair\nair\nair\ninput\nair\nminecraft:coal\nair\ninput\nair\nminecraft:stick\nair\noutput\nminecraft:torch,4\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This would be the broken down recipe for torchs in the base game. Use ",(0,r.jsx)(n.code,{children:"air"})," if you'd like nothing to be rendered in that grid position."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Tip!"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"If you use VSCode, you can use find and replace with regex and simplify this inside of a file:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Find: ",(0,r.jsx)(n.code,{children:"\\\\<recipe\\\\>(.*?)\\\\<\\/recipe\\\\>"})]}),"\n",(0,r.jsxs)(n.li,{children:["Replace: ",(0,r.jsx)(n.code,{children:'<CraftingTable recipe="$1"/>'})]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var t=i(6540);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);